{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maynh\\\\OneDrive\\\\Documents\\\\GitHub\\\\CSE110-Project-TritionCook\\\\tritoncook-app\\\\src\\\\context\\\\LoginContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialAccount = {\n  username: \"\",\n  password: \"\"\n};\nconst initialState = {\n  account: initialAccount,\n  setAccount: () => {},\n  valid: false,\n  setValid: () => {}\n};\nexport const LoginContext = /*#__PURE__*/createContext(initialState);\nexport const LoginProvider = props => {\n  _s();\n  const [account, setAccount] = useState(initialState.account);\n  return /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n    value: {\n      account: account,\n      setAccount: setAccount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginProvider, \"PWnHky6m6odtp8TO3Ov0ulOPoLM=\");\n_c = LoginProvider;\nvar _c;\n$RefreshReg$(_c, \"LoginProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","initialAccount","username","password","initialState","account","setAccount","valid","setValid","LoginContext","LoginProvider","props","_s","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/maynh/OneDrive/Documents/GitHub/CSE110-Project-TritionCook/tritoncook-app/src/context/LoginContext.tsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { Account } from \"../types/types\"\r\n\r\ninterface LoginContextType {\r\n    account: Account;\r\n    setAccount: React.Dispatch<React.SetStateAction<Account>>;\r\n    valid: boolean;\r\n    setValid: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst initialAccount = {username:\"\", password: \"\"};\r\nconst initialState: LoginContextType = { \r\n    account: initialAccount,\r\n    setAccount: () => {},\r\n    valid: false,\r\n    setValid: () => {},\r\n}\r\n\r\nexport const LoginContext = createContext<LoginContextType>(initialState);\r\n\r\nexport const LoginProvider = (props: any) => {\r\n    \r\n    const [account, setAccount] = useState<Account>(initialState.account)\r\n\r\n    return(\r\n        <LoginContext.Provider\r\n        value ={{\r\n            account:account,\r\n            setAccount: setAccount,\r\n        }}\r\n        >\r\n            {props.children}\r\n        </LoginContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUhD,MAAMC,cAAc,GAAG;EAACC,QAAQ,EAAC,EAAE;EAAEC,QAAQ,EAAE;AAAE,CAAC;AAClD,MAAMC,YAA8B,GAAG;EACnCC,OAAO,EAAEJ,cAAc;EACvBK,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACrB,CAAC;AAED,OAAO,MAAMC,YAAY,gBAAGZ,aAAa,CAAmBO,YAAY,CAAC;AAEzE,OAAO,MAAMM,aAAa,GAAIC,KAAU,IAAK;EAAAC,EAAA;EAEzC,MAAM,CAACP,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAUM,YAAY,CAACC,OAAO,CAAC;EAErE,oBACIL,OAAA,CAACS,YAAY,CAACI,QAAQ;IACtBC,KAAK,EAAG;MACJT,OAAO,EAACA,OAAO;MACfC,UAAU,EAAEA;IAChB,CAAE;IAAAS,QAAA,EAEGJ,KAAK,CAACI;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEhC,CAAC;AAAAP,EAAA,CAdYF,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}